name: Deploy to production
on:
  push:
    branches:
    - 'github-actions'

jobs:
  check-for-gtfs-changes:
    runs-on: ubuntu-latest
    steps:
        - name: Check out repo
          uses: actions/checkout@v3
    
        - name: Check for GTFS changes
          uses: dorny/paths-filter@v2
          id: gtfs-changes
          with:
            filters: |
              src:
                - 'gogogogog/**'

          # run only if some file in 'src' folder was changed
        - if: ${{ steps.gtfs-changes.outputs.src }} == 'true'
          run: |
              echo ${{ steps.gtfs-changes.outputs.src }}
              echo "The GTFS folder has been updated! Push changes into Dynamo."
  
  update-dynamo-tables:
    needs: check-for-gtfs-changes
    runs-on: ubuntu-latest
    #if: git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep "gtfs/"; then
    #  echo "The file or directory was modified."
    #if: ${{ contains(github.event.head_commit.modified, 'gtfs/') }}
    steps:
        
        - name: Check out repo
          uses: actions/checkout@v3

        - name: Setup Node environment
          uses: actions/setup-node@v3
          with:
            node-version: '18'

        - name: npm install
          run: npm install
          
        - name: set AWS creds
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

        - name: import new TRIP data
          if: false
          run: NODE_ENV=prod npm run trip-import
          
        - name: import new STOPS data
          if: false
          run: NODE_ENV=prod npm run stop-import

  deploy-lambda:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        
      - name: Setup Node environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: npm install
        run: npm install    

      - name: Build a zip file
        run: zip -r function.zip .

      - name: set AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to Lambda
        run: aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --zip-file fileb://function.zip

